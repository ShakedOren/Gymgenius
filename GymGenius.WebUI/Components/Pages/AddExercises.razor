@page "/add-exercise"
@using Gymgenius.bo
@using GymGenius.WebUI.Services
@inject ApiService ApiService
@inject NavigationManager Navigation
<CascadingAuthenticationState>
<h3>Add Exercise</h3>

<EditForm Model="Exercise" OnSubmit="HandleValidSubmit" FormName="addExerciseForm">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<div class="mb-3">
		<label for="name" class="form-label">
			Name
			<InputText id="name" class="form-control" @bind-Value="Exercise.Name" />
		</label>
	</div>

	<button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@if (submissionSuccess)
{
	<div class="alert alert-success mt-3">
		Exercise added successfully!
	</div>
}

@code {
	[SupplyParameterFromForm]
	public ExerciseForm Exercise { get; set; }

	public bool submissionSuccess { get; set; } = false;

	public class ExerciseForm
	{
		public string? Name { get; set; }
	}

	protected override void OnInitialized()
	{
		Exercise ??= new();
	}

	private async Task HandleValidSubmit()
	{
		try
		{
			await ApiService.AddExerciseAsync(new Exercise(Exercise.Name));
			submissionSuccess = true;
			// Optionally reset the form
			Exercise = new ExerciseForm();
		}
		catch (Exception ex)
		{
			// Handle the exception, show an error message, etc.
			submissionSuccess = false;
		}
	}
}

</CascadingAuthenticationState>