@page "/log-training-program"
@using GymGenius.BO
@using GymGenius.WebUI.Services
@using Microsoft.AspNetCore.Components.Authorization
@inject ApiService ApiService
@inject AuthenticationStateProvider AuthenticationStateProvider

<RadzenDataGrid TItem="ExerciseLog" Data="@exerciseLogs" AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="10" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or" SelectionMode="DataGridSelectionMode.Single">
	<Columns>
		<RadzenDataGridColumn TItem="ExerciseLog" Property="ExerciseName" Title="Exercise Name" />
		<RadzenDataGridColumn TItem="ExerciseLog" Title="Sets">
			<Template Context="exerciseLog">
				<RadzenDropDown @bind-Value="exerciseLog.Sets" Data="Enumerable.Range(1, 10)" />
			</Template>
		</RadzenDataGridColumn>
		<RadzenDataGridColumn TItem="ExerciseLog" Title="Reps">
			<Template Context="exerciseLog">
				<RadzenDropDown @bind-Value="exerciseLog.Reps" Data="Enumerable.Range(1, 20)" />
			</Template>
		</RadzenDataGridColumn>
	</Columns>
</RadzenDataGrid>

<RadzenButton Text="Log Training" Click="LogTraining" />

@if (submissionSuccess)
{
	<div class="alert alert-success mt-3">
		Training logged successfully!
	</div>
}

@code {
	private List<ExerciseLog> exerciseLogs;
	private string currentUser;
	private TrainingProgram? currentProgram;
	public bool submissionSuccess { get; set; } = false;
	protected override async Task OnInitializedAsync()
	{
		var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
		currentUser = authState.User.Identity.Name;
		currentProgram = await ApiService.GetUserProgramAsync(currentUser);
		var exercises = await ApiService.GetExercisesOfProgramAsync(currentProgram.Name);
		exerciseLogs = exercises.Select(e => new ExerciseLog { ExerciseName = e.Name , Sets = 3, Reps = 3}).ToList();
	}

	private async Task LogTraining()
	{
		var trainingLog = new TrainingLog
		{
			ProgramName = currentProgram.Name,
			UserName = currentUser,
			ExerciseLogs = exerciseLogs
		};
		await ApiService.LogTrainingAsync(trainingLog);
		submissionSuccess = true;
	}
}