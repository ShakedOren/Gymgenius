@page "/exercises"
@using Gymgenius.bo
@using GymGenius.WebUI.Services
@inject ApiService ApiService
@inject NavigationManager Navigation

<h3>Exercises</h3>

<RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="10" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
				Data="@exercises" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or" SelectionMode="DataGridSelectionMode.Single" @bind-Value=@selectedExercise>
	<Columns>
		<RadzenDataGridColumn Property="@nameof(Exercise.Name)" Filterable="false" Title="Name" Frozen="true" Width="80px" TextAlign="TextAlign.Center" />
		<RadzenDataGridColumn Property="@nameof(Exercise.Name)" Filterable="false" Title="Deletion" Frozen="true" Width="80px" TextAlign="TextAlign.Center">
			<Template Context="exercise">
				<RadzenButton Text="Delete"
							  Click="@(() => DeleteExercise(exercise.Name))"
							  ButtonStyle="ButtonStyle.Danger"
							  Style="margin: 2px; text-transform: none;" />
			</Template>
		</RadzenDataGridColumn>
	</Columns>
</RadzenDataGrid>

@if (deletionFailed)
{
	<div class="alert alert-danger mt-3">
		Can't Delete Exercise, Check If Exercise Associated To Program
	</div>
}

@code {
	private IEnumerable<Exercise> exercises;
	IList<Exercise> selectedExercise;

	public bool deletionFailed { get; set; } = false;

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();
		exercises = await ApiService.GetExercisesAsync();
		selectedExercise = new List<Exercise>() { exercises.FirstOrDefault() };
	}

	private async Task DeleteExercise(string name)
	{
		try
		{
			await ApiService.DeleteExerciseAsync(name);
			exercises = await ApiService.GetExercisesAsync(); // Refresh the list
			deletionFailed = false;

		}
		catch (HttpRequestException ex)
		{
			deletionFailed = true;
		}
	}

	private void NavigateToExerciseDetails(string name)
	{
		Navigation.NavigateTo($"/exercise/{name}");
	}
}