@page "/admin"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider;
@attribute [Authorize(Roles = "Admin")]


<h3>Admin Only Content</h3>
<AuthorizeView Roles="Admin">
	<Authorized>
		@if(@context.User.Identity is not null)
		{
		<p>Welcome, @context.User.Identity.Name</p>
		}
		else
		{
		<p>Not worked</p>
		}
		<p>This content is only visible to users with the Admin role.</p>
	</Authorized>
	<NotAuthorized>
		<p>You are not authorized to view this content.</p>
	</NotAuthorized>
</AuthorizeView>

<p>Role: @Role</p>

@code {
	public string Role { get; set; }

	protected override async Task OnInitializedAsync()
	{
		//await CheckAuthentication();
		var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
		var user = authState.User;
		if (user?.Identity?.IsAuthenticated ?? false)
		{
			var name = user.Identity.Name;
			Role = name;
		}
	}
}
