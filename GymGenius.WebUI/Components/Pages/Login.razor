@page "/login"
@using GymGenius.WebUI.Services
@using GymGenius.BO
@inject ApiService ApiService
@inject NavigationManager Navigation
@inject CustomAuthenticationStateProvider AuthStateProvider

<h3>Login</h3>
<RadzenFieldset>
	<fieldset>
		<div class="row mb-3">
			<div class="col-md-3">
				<RadzenLabel Text="Username" />
				<RadzenTextBox @bind-Value="@loginModel.UserName" Placeholder="Enter your username" Style="width: 100%;" />
			</div>
		</div>

		<div class="row mb-3">
			<div class="col-md-3">
				<RadzenLabel Text="Password" />
				<RadzenPassword @bind-Value="@loginModel.Password" Placeholder="Enter your password" Style="width: 100%;" />
			</div>
		</div>

		<div class="row">
			<div class="col-md-3">
				<RadzenButton Text="Login" ButtonStyle="ButtonStyle.Primary" Click="@HandleLogin" Style="width: 100%;" />
			</div>
		</div>
	</fieldset>
	
</RadzenFieldset>
@if (errorMessage != "")
{
	<div class="row mb-3">
		<div class="col-md-3">
	        <RadzenText Text="@errorMessage" Style="color: red;" />
		</div>
	</div>
}
@code {
	public UserLogin loginModel { get; set; } = new UserLogin();
	public bool submissionFailed { get; set; } = false;

	private string errorMessage = "";

	protected override Task OnAfterRenderAsync(bool firstRender)
	{
		return base.OnAfterRenderAsync(firstRender);
	}

	private async Task HandleLogin()
	{
		var token = await ApiService.LoginAsync(loginModel);
		if (token != null)
		{
			errorMessage = "";
			await AuthStateProvider.NotifyUserAuthentication(token);
			Navigation.NavigateTo("/", true);
		}
		else
		{
			// Handle login failure
			errorMessage = "Invalid username or password. Please try again.";
		}
	}
}