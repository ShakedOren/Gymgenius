@page "/login"
@using GymGenius.WebUI.Services
@using GymGenius.BO
@inject ApiService ApiService
@inject NavigationManager Navigation
@inject CustomAuthenticationStateProvider AuthStateProvider
@rendermode InteractiveServer

<h3>Login</h3>

<EditForm Model="loginModel" OnValidSubmit="HandleLogin" FormName="loginForm">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<div class="form-group">
		<label>Username</label>
		<InputText @bind-Value="loginModel.UserName" class="form-control" />
	</div>
	<div class="form-group">
		<label>Password</label>
		<InputText @bind-Value="loginModel.Password" type="password" class="form-control" />
	</div>
	<button type="submit" class="btn btn-primary">Login</button>
</EditForm>
@if (submissionFailed)
{
	<div class="alert alert-failure mt-3">
		Login Failed!
	</div>
}
@code {
	public UserLogin loginModel { get; set; } = new UserLogin();
	public bool submissionFailed { get; set; } = false;
	protected override Task OnAfterRenderAsync(bool firstRender)
	{
		return base.OnAfterRenderAsync(firstRender);
	}

	private async Task HandleLogin()
	{
		var token = await ApiService.LoginAsync(loginModel);
		if (token != null)
		{
			await AuthStateProvider.NotifyUserAuthentication(token);
			Navigation.NavigateTo("/");
		}
		else
		{
			// Handle login failure
			submissionFailed = true;
		}
	}
}