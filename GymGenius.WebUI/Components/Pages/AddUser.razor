@page "/add-user"
@using Gymgenius.bo
@using GymGenius.WebUI.Services
@inject ApiService ApiService
@inject NavigationManager Navigation

<h3>Add User</h3>

<EditForm Model="userForm" OnValidSubmit="HandleValidSubmit" FormName="addUserForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="username" class="form-label">Username</label>
        <InputText id="username" class="form-control" @bind-Value="userForm.UserName" />
    </div>
    <div class="mb-3">
        <label for="firstName" class="form-label">First Name</label>
        <InputText id="firstName" class="form-control" @bind-Value="userForm.FirstName" />
    </div>
    <div class="mb-3">
        <label for="lastName" class="form-label">Last Name</label>
        <InputText id="lastName" class="form-control" @bind-Value="userForm.LastName" />
    </div>
    <div class="mb-3">
        <label for="email" class="form-label">Email</label>
        <InputText id="email" class="form-control" @bind-Value="userForm.Email" />
    </div>
    <div class="mb-3">
        <label for="age" class="form-label">Age</label>
        <InputNumber id="age" class="form-control" @bind-Value="userForm.Age" />
    </div>
    <div class="mb-3">
        <label class="form-check-label">
            <InputCheckbox @bind-Value="userForm.IsTrainer" /> Is Trainer
        </label>
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@if (submissionSuccess)
{
    <div class="alert alert-success mt-3">
        User added successfully!
    </div>
}

@code {
	[SupplyParameterFromForm]
    public UserForm userForm { get; set; }
    private bool submissionSuccess = false;
    protected override void OnInitialized()
    {
        userForm ??= new();
    }
    public class UserForm
    {
        public string UserName { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string Email { get; set; }
        public int Age { get; set; }
        public bool IsTrainer { get; set; }
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            var user = new User
                {
                    UserName = userForm.UserName,
                    FirstName = userForm.FirstName,
                    LastName = userForm.LastName,
                    Email = userForm.Email,
                    Age = userForm.Age,
                    IsTrainer = userForm.IsTrainer
                };

            await ApiService.AddUserAsync(user);
            submissionSuccess = true;
            userForm = new UserForm(); // Reset the form
        }
        catch (Exception ex)
        {
            // Handle exception
            submissionSuccess = false;
        }
    }
}
